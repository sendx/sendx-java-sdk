/*
 * SendX REST API
 * # Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sendx_java_sdk;

import sendx_java_sdk.ApiException;
import sendx_java_sdk.Campaign;
import sendx_java_sdk.CampaignRequest;
import sendx_java_sdk.CreateResponse;
import sendx_java_sdk.DeleteCampaign200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CampaignApi
 */
@Disabled
public class CampaignApiTest {

    private final CampaignApi api = new CampaignApi();

    /**
     * Create Campaign
     *
     * Create a new email campaign
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCampaignTest() throws ApiException {
        CampaignRequest campaignRequest = null;
        CreateResponse response = api.createCampaign(campaignRequest);
        // TODO: test validations
    }

    /**
     * Delete Campaign
     *
     * Deletes a specific campaign by its campaignId.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCampaignTest() throws ApiException {
        String campaignId = null;
        DeleteCampaign200Response response = api.deleteCampaign(campaignId);
        // TODO: test validations
    }

    /**
     * Edit Campaign
     *
     * Submit edited content for a specific campaign.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void editCampaignTest() throws ApiException {
        String campaignId = null;
        CampaignRequest campaignRequest = null;
        Campaign response = api.editCampaign(campaignId, campaignRequest);
        // TODO: test validations
    }

    /**
     * Get All Campaigns
     *
     * Retrieve a list of all campaigns.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllCampaignsTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        String search = null;
        List<Campaign> response = api.getAllCampaigns(offset, limit, search);
        // TODO: test validations
    }

    /**
     * Get Campaign By Id
     *
     * Retrieve a specific campaign using its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCampaignByIdTest() throws ApiException {
        String campaignId = null;
        Campaign response = api.getCampaignById(campaignId);
        // TODO: test validations
    }

}
