/*
 * SendX REST API
 * # Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sendx_java_sdk;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ReportData
 */
public class ReportDataTest {
    private final ReportData model = new ReportData();

    /**
     * Model tests for ReportData
     */
    @Test
    public void testReportData() {
        // TODO: test ReportData
    }

    /**
     * Test the property 'campaignId'
     */
    @Test
    public void campaignIdTest() {
        // TODO: test campaignId
    }

    /**
     * Test the property 'linkStats'
     */
    @Test
    public void linkStatsTest() {
        // TODO: test linkStats
    }

    /**
     * Test the property 'clickedContactCount'
     */
    @Test
    public void clickedContactCountTest() {
        // TODO: test clickedContactCount
    }

    /**
     * Test the property 'openedContactCount'
     */
    @Test
    public void openedContactCountTest() {
        // TODO: test openedContactCount
    }

    /**
     * Test the property 'repliedContactCount'
     */
    @Test
    public void repliedContactCountTest() {
        // TODO: test repliedContactCount
    }

    /**
     * Test the property 'clickedUniqueContactCount'
     */
    @Test
    public void clickedUniqueContactCountTest() {
        // TODO: test clickedUniqueContactCount
    }

    /**
     * Test the property 'openedUniqueContactCount'
     */
    @Test
    public void openedUniqueContactCountTest() {
        // TODO: test openedUniqueContactCount
    }

    /**
     * Test the property 'repliedUniqueContactCount'
     */
    @Test
    public void repliedUniqueContactCountTest() {
        // TODO: test repliedUniqueContactCount
    }

    /**
     * Test the property 'sentContactCount'
     */
    @Test
    public void sentContactCountTest() {
        // TODO: test sentContactCount
    }

    /**
     * Test the property 'unsubscribeContactCount'
     */
    @Test
    public void unsubscribeContactCountTest() {
        // TODO: test unsubscribeContactCount
    }

    /**
     * Test the property 'bounceContactCount'
     */
    @Test
    public void bounceContactCountTest() {
        // TODO: test bounceContactCount
    }

    /**
     * Test the property 'spamContactCount'
     */
    @Test
    public void spamContactCountTest() {
        // TODO: test spamContactCount
    }

    /**
     * Test the property 'emailRevenue'
     */
    @Test
    public void emailRevenueTest() {
        // TODO: test emailRevenue
    }

    /**
     * Test the property 'revenuePerRecipient'
     */
    @Test
    public void revenuePerRecipientTest() {
        // TODO: test revenuePerRecipient
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

}
