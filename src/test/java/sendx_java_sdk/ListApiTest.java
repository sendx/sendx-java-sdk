/*
 * SendX REST API
 * # Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sendx_java_sdk;

import sendx_java_sdk.ApiException;
import sendx_java_sdk.CreateResponse;
import sendx_java_sdk.DeleteResponse;
import sendx_java_sdk.ListModel;
import sendx_java_sdk.ListRequest;
import sendx_java_sdk.OperationResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ListApi
 */
@Disabled
public class ListApiTest {

    private final ListApi api = new ListApi();

    /**
     * Create List
     *
     * Create a new list.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createListTest() throws ApiException {
        ListRequest listRequest = null;
        CreateResponse response = api.createList(listRequest);
        // TODO: test validations
    }

    /**
     * Delete List
     *
     * Deletes a specific list by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteListTest() throws ApiException {
        String listId = null;
        DeleteResponse response = api.deleteList(listId);
        // TODO: test validations
    }

    /**
     * Get All Lists
     *
     * Retrieve all lists for the account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllListsTest() throws ApiException {
        Integer offset = null;
        Integer limit = null;
        String search = null;
        List<ListModel> response = api.getAllLists(offset, limit, search);
        // TODO: test validations
    }

    /**
     * Get List
     *
     * Retrieve a specific list by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListByIdTest() throws ApiException {
        String listId = null;
        ListModel response = api.getListById(listId);
        // TODO: test validations
    }

    /**
     * Update List
     *
     * Update an existing list by its ID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateListTest() throws ApiException {
        String listId = null;
        ListRequest listRequest = null;
        OperationResponse response = api.updateList(listId, listRequest);
        // TODO: test validations
    }

}
