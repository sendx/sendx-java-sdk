/*
 * SendX REST API
 * # Introduction SendX is an email marketing product. It helps you convert website visitors to customers, send them promotional emails, engage with them using drip sequences and craft custom journeys using powerful but simple automations. The SendX API is organized around REST. Our API has predictable resource-oriented URLs, accepts form-encoded request bodies, returns JSON-encoded responses, and uses standard HTTP response codes, authentication, and verbs. The SendX Rest API doesnâ€™t support bulk updates. You can work on only one object per request. <br> 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@sendx.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package sendx_java_sdk;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import sendx_java_sdk.CampaignDashboardData;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import sendx_java_sdk.JSON;

/**
 * LastSentCampaignStat
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-25T16:47:38.261598+05:30[Asia/Kolkata]", comments = "Generator version: 7.8.0")
public class LastSentCampaignStat {
  public static final String SERIALIZED_NAME_CAMPAIGN = "campaign";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN)
  private CampaignDashboardData campaign;

  public static final String SERIALIZED_NAME_SENT = "sent";
  @SerializedName(SERIALIZED_NAME_SENT)
  private Integer sent;

  public static final String SERIALIZED_NAME_DELIVERED = "delivered";
  @SerializedName(SERIALIZED_NAME_DELIVERED)
  private Integer delivered;

  public static final String SERIALIZED_NAME_SUBSCRIBED = "subscribed";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBED)
  private Integer subscribed;

  public static final String SERIALIZED_NAME_UNSUBSCRIBED = "unsubscribed";
  @SerializedName(SERIALIZED_NAME_UNSUBSCRIBED)
  private Integer unsubscribed;

  public static final String SERIALIZED_NAME_OPEN = "open";
  @SerializedName(SERIALIZED_NAME_OPEN)
  private Integer open;

  public static final String SERIALIZED_NAME_LINK_CLICKED = "linkClicked";
  @SerializedName(SERIALIZED_NAME_LINK_CLICKED)
  private Integer linkClicked;

  public static final String SERIALIZED_NAME_REPLIED = "replied";
  @SerializedName(SERIALIZED_NAME_REPLIED)
  private Integer replied;

  public LastSentCampaignStat() {
  }

  public LastSentCampaignStat campaign(CampaignDashboardData campaign) {
    this.campaign = campaign;
    return this;
  }

  /**
   * Get campaign
   * @return campaign
   */
  @javax.annotation.Nullable
  public CampaignDashboardData getCampaign() {
    return campaign;
  }

  public void setCampaign(CampaignDashboardData campaign) {
    this.campaign = campaign;
  }


  public LastSentCampaignStat sent(Integer sent) {
    this.sent = sent;
    return this;
  }

  /**
   * Number of emails sent.
   * @return sent
   */
  @javax.annotation.Nullable
  public Integer getSent() {
    return sent;
  }

  public void setSent(Integer sent) {
    this.sent = sent;
  }


  public LastSentCampaignStat delivered(Integer delivered) {
    this.delivered = delivered;
    return this;
  }

  /**
   * Number of emails delivered.
   * @return delivered
   */
  @javax.annotation.Nullable
  public Integer getDelivered() {
    return delivered;
  }

  public void setDelivered(Integer delivered) {
    this.delivered = delivered;
  }


  public LastSentCampaignStat subscribed(Integer subscribed) {
    this.subscribed = subscribed;
    return this;
  }

  /**
   * Number of new subscriptions.
   * @return subscribed
   */
  @javax.annotation.Nullable
  public Integer getSubscribed() {
    return subscribed;
  }

  public void setSubscribed(Integer subscribed) {
    this.subscribed = subscribed;
  }


  public LastSentCampaignStat unsubscribed(Integer unsubscribed) {
    this.unsubscribed = unsubscribed;
    return this;
  }

  /**
   * Number of unsubscribes.
   * @return unsubscribed
   */
  @javax.annotation.Nullable
  public Integer getUnsubscribed() {
    return unsubscribed;
  }

  public void setUnsubscribed(Integer unsubscribed) {
    this.unsubscribed = unsubscribed;
  }


  public LastSentCampaignStat open(Integer open) {
    this.open = open;
    return this;
  }

  /**
   * Number of emails opened.
   * @return open
   */
  @javax.annotation.Nullable
  public Integer getOpen() {
    return open;
  }

  public void setOpen(Integer open) {
    this.open = open;
  }


  public LastSentCampaignStat linkClicked(Integer linkClicked) {
    this.linkClicked = linkClicked;
    return this;
  }

  /**
   * Number of link clicks.
   * @return linkClicked
   */
  @javax.annotation.Nullable
  public Integer getLinkClicked() {
    return linkClicked;
  }

  public void setLinkClicked(Integer linkClicked) {
    this.linkClicked = linkClicked;
  }


  public LastSentCampaignStat replied(Integer replied) {
    this.replied = replied;
    return this;
  }

  /**
   * Number of replies received.
   * @return replied
   */
  @javax.annotation.Nullable
  public Integer getReplied() {
    return replied;
  }

  public void setReplied(Integer replied) {
    this.replied = replied;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LastSentCampaignStat lastSentCampaignStat = (LastSentCampaignStat) o;
    return Objects.equals(this.campaign, lastSentCampaignStat.campaign) &&
        Objects.equals(this.sent, lastSentCampaignStat.sent) &&
        Objects.equals(this.delivered, lastSentCampaignStat.delivered) &&
        Objects.equals(this.subscribed, lastSentCampaignStat.subscribed) &&
        Objects.equals(this.unsubscribed, lastSentCampaignStat.unsubscribed) &&
        Objects.equals(this.open, lastSentCampaignStat.open) &&
        Objects.equals(this.linkClicked, lastSentCampaignStat.linkClicked) &&
        Objects.equals(this.replied, lastSentCampaignStat.replied);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaign, sent, delivered, subscribed, unsubscribed, open, linkClicked, replied);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LastSentCampaignStat {\n");
    sb.append("    campaign: ").append(toIndentedString(campaign)).append("\n");
    sb.append("    sent: ").append(toIndentedString(sent)).append("\n");
    sb.append("    delivered: ").append(toIndentedString(delivered)).append("\n");
    sb.append("    subscribed: ").append(toIndentedString(subscribed)).append("\n");
    sb.append("    unsubscribed: ").append(toIndentedString(unsubscribed)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    linkClicked: ").append(toIndentedString(linkClicked)).append("\n");
    sb.append("    replied: ").append(toIndentedString(replied)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("campaign");
    openapiFields.add("sent");
    openapiFields.add("delivered");
    openapiFields.add("subscribed");
    openapiFields.add("unsubscribed");
    openapiFields.add("open");
    openapiFields.add("linkClicked");
    openapiFields.add("replied");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LastSentCampaignStat
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LastSentCampaignStat.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LastSentCampaignStat is not found in the empty JSON string", LastSentCampaignStat.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LastSentCampaignStat.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LastSentCampaignStat` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `campaign`
      if (jsonObj.get("campaign") != null && !jsonObj.get("campaign").isJsonNull()) {
        CampaignDashboardData.validateJsonElement(jsonObj.get("campaign"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LastSentCampaignStat.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LastSentCampaignStat' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LastSentCampaignStat> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LastSentCampaignStat.class));

       return (TypeAdapter<T>) new TypeAdapter<LastSentCampaignStat>() {
           @Override
           public void write(JsonWriter out, LastSentCampaignStat value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LastSentCampaignStat read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LastSentCampaignStat given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LastSentCampaignStat
   * @throws IOException if the JSON string is invalid with respect to LastSentCampaignStat
   */
  public static LastSentCampaignStat fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LastSentCampaignStat.class);
  }

  /**
   * Convert an instance of LastSentCampaignStat to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

